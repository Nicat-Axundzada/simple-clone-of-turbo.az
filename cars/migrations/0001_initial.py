# Generated by Django 5.0.2 on 2024-02-14 20:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ban',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_new', models.BooleanField()),
                ('is_driven', models.BooleanField()),
                ('city', models.CharField(max_length=30)),
                ('currency', models.CharField(choices=[('AZN', 'AZN'), ('USD', 'USD'), ('EURO', 'EURO')], max_length=10)),
                ('barter', models.BooleanField(default=False)),
                ('credit', models.BooleanField(default=False)),
                ('crash', models.BooleanField(default=False)),
                ('colored', models.BooleanField(default=False)),
                ('mileage', models.IntegerField()),
                ('salon', models.BooleanField()),
                ('personal', models.BooleanField()),
                ('number_of_owners', models.IntegerField(blank=True, null=True)),
                ('broken', models.BooleanField()),
                ('status', models.IntegerField(choices=[(1, 'Satışdadır'), (2, 'Sifarişlə')])),
                ('alloy_wheels', models.BooleanField()),
                ('ABS', models.BooleanField()),
                ('hatch', models.BooleanField()),
                ('rain_sensor', models.BooleanField()),
                ('central_locking', models.BooleanField()),
                ('park_radar', models.BooleanField()),
                ('air_conditioner', models.BooleanField()),
                ('seat_heating', models.BooleanField()),
                ('leather_salon', models.BooleanField()),
                ('xenon_lamps', models.BooleanField()),
                ('rear_view_camera', models.BooleanField()),
                ('side_curtains', models.BooleanField()),
                ('seat_ventilation', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.ImageField(null=True, upload_to='car_image/')),
                ('price', models.IntegerField()),
                ('year', models.IntegerField()),
                ('color', models.CharField(max_length=12)),
                ('fuel_type', models.CharField(choices=[('Benzin', 'Benzin'), ('Diesel', 'Dizel'), ('Gas', 'Qaz'), ('Electro', 'Elektro'), ('Hybrid', 'Hibrid'), ('Plug-in Hybrid', 'Plug-in Hibrid')], max_length=20)),
                ('transmitter', models.CharField(choices=[('Back', 'Arxa'), ('Front', 'Ön'), ('Full', 'Tam')], max_length=12)),
                ('gear_box', models.CharField(choices=[('Mechanic', 'Mexaniki'), ('Automat', 'Avtomat'), ('Robotized', 'Robotlaşdırılmış'), ('Variator', 'Variator')], max_length=20)),
                ('volume', models.DecimalField(decimal_places=1, max_digits=3)),
                ('power', models.IntegerField()),
                ('number_of_seats', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8+', '8+')], max_length=5, null=True)),
                ('assembled_market', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=30)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.brand')),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ban', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.ban')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.brand')),
                ('conditions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.condition')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.model')),
                ('properties', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.property')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
